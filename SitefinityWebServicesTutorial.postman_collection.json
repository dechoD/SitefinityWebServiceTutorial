{
	"id": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
	"name": "Sitefinity Web Services Tutorial",
	"description": "This is a collection of sample request supported by Sitefinity Web Services REST API.",
	"order": [
		"597a32fc-6994-bc88-45c7-03f91347e9a0",
		"8e1167e1-37c6-8d15-1412-4ffb1b82980b",
		"3c523d93-e5b3-fca4-a1a4-179a3964457b",
		"22b7161e-5b8f-d4ad-2d72-f3d55a4395a0",
		"199dfb48-0b16-0e44-e52e-20991ceff12e",
		"e30f35dc-5aa4-3ed1-739f-bf420600b86e",
		"2536558d-0c4e-fce6-80cf-35abba9f3b89",
		"8ff662e9-518f-0c28-1b73-e882993c4517",
		"9f9e4c81-b73e-b8d4-dd98-c83f08f30264",
		"f624d652-c344-4547-5ec1-5a5be77a31f9",
		"d2b8094a-975d-879e-d167-7bdffc4b5231",
		"3ec2d798-29d3-bee6-d541-334095698422",
		"e4782d83-0c08-9f64-5c90-22fd25baf53f",
		"a32fe298-a581-e6e9-982e-98777f43ca6a",
		"f3b81f91-fcc1-c59f-ea45-a7e61fd80280",
		"1cda059f-87a5-41de-fe1b-df9f0caccce1",
		"fd6dfeb7-0364-c912-6491-281bf528ecf4",
		"53577d2e-d4a5-d036-47ee-7c4aa2c5e053",
		"37931639-2a9e-2103-2d5e-68e3d0ac0da2",
		"61f543fe-5fc3-a447-fb9c-cb7efeb693b7",
		"f06657a4-8c34-3480-1532-834c06fbd290",
		"4010e44a-51d0-18b7-dba0-d6f282627062",
		"98fa34ec-8be0-b231-416a-875d4b1f5875",
		"76fb207a-8a23-3487-5ad2-24ce3cd2928d",
		"4a54a1be-c177-bc85-d309-fec22ca3d5e1",
		"08ce2e42-850b-bd73-bc5a-e0d04a502570",
		"6ee86017-8a6b-e35a-8807-df6ccfa45251",
		"c978831b-6bbb-653a-5c5b-c641106c9219",
		"86eb5929-6966-c02d-1710-70acbdfca057",
		"ac5dce15-c642-b06f-abc2-d47541441c66",
		"59249a41-a3a6-b278-2b64-cbe62970ad25",
		"5162282d-1acc-b77f-aa23-c598e975ffa7",
		"cef8a2a3-b640-0d43-5f0b-938a6f82451f",
		"2512320b-8407-11f2-c981-9b9e9f6c5588",
		"e4147300-e7d5-86f9-bce6-49f0e3acd202",
		"89024640-260a-ea77-d46c-e9a91105792a",
		"8a659c69-3ff2-581d-1a31-2b57366cd27b",
		"64ac9988-6c05-2c8d-5441-abe4174fdd28",
		"ee5b87ef-a958-0494-1efb-414e883c4d77",
		"bc29889a-abd0-5b1f-cb0b-7d876d768b96",
		"88a4ef24-6707-616b-1226-a5631f0da6cc"
	],
	"folders": [],
	"timestamp": 1463738787164,
	"owner": "390073",
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "08ce2e42-850b-bd73-bc5a-e0d04a502570",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings({{item_id}})/Parent/$ref",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 204\"] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465907973638,
			"name": "26. Delete relation",
			"description": "You can delete a relation using the same endpoint */{relation}/$ref*, just send it with delete verb.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "199dfb48-0b16-0e44-e52e-20991ceff12e",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings(b3c0818f-c497-4321-9983-6db5fd24324a)/FileAttachment",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": "{\n  \"Emails\": [\"miathompson@contoso.com\", \"miathompson@example.com\"]\n}",
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body contains odata context\"] = responseBody.has(\"@odata.context\");\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\ntests[\"Validate returned document id\"] = values[0].Id === \"0d86e40d-515d-67af-8bab-ff0100a58543\";\ntests[\"Validate returned document title\"] = values[0].Title === \"Graphic Designer Job Duties\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465907245967,
			"name": "05. Navigate to related entities",
			"description": "To navigate to related entities, append the related entity name as defined in $metadata",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "1cda059f-87a5-41de-fe1b-df9f0caccce1",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$orderby=PublicationDate&$descskip=2&$top=2",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\nvar lastDate = values[0].PublicationDate;\n\nvalues.forEach(function(value) {\n    tests[\"Response is ordered by PublicationDate\"] = value.PublicationDate > lastDate;\n    lastDate = value.PublicationDate;\n});\n\ntests[\"Only two items are returned\"] = values.length === 2;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460993187088,
			"name": "16. Client-side paging",
			"description": "There are two types of paging in Sitefinity web services, server and client side. Clients can drive paging using *$top* and *$skip*. You can also combine paging and other filtering and sorting options.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "22b7161e-5b8f-d4ad-2d72-f3d55a4395a0",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings(b3c0818f-c497-4321-9983-6db5fd24324a)",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body contains odata context\"] = responseBody.has(\"@odata.context\");\n\ntests[\"Body contains Id\"] = responseBody.has(\"Id\");\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Verify returned job opening Id.\"] = jsonData.Id === \"b3c0818f-c497-4321-9983-6db5fd24324a\";\ntests[\"Verify returned job opening title.\"] = jsonData.Title === \"Graphic and Interactions Designer\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460988538828,
			"name": "04. Get a single entity from an entity set",
			"description": "To get a particular entity from a collection, append an id segment enclosed in brackets.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "2512320b-8407-11f2-c981-9b9e9f6c5588",
			"headers": "Content-Type: application/json\nx-sf-service-request: true\nAuthorization: {{token}}\n",
			"url": "servicessandbox.cloudapp.net/api/default/taxonomies?$filter=Type eq 'Hierarchical'",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nfor (index = 0, len = jsonData.length; index < len; ++index) {\n    console.log(jsonData[index]);\n    tests[\"Your test name\"] = jsonData[index].Type === \"Hierarchical\";\n}\n\nvalues.forEach(function(value) {\n    tests[\"All items are of hierarchical type\"] = value.Type === \"Hierarchical\";\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465909913433,
			"name": "34. Filter by taxonomy type",
			"description": "You can filter by taxonomy type if you need only the flat or hierarchical taxonomies.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "    {\n      \"Title\": \"test\"\n    }"
		},
		{
			"id": "2536558d-0c4e-fce6-80cf-35abba9f3b89",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/blogposts?$filter=contains(Parent/Title, 'Quantum')",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Validate first returned item id\"] = jsonData.value[0].Id === \"729de92c-87eb-4aa0-9bfe-0a723216f901\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465907458545,
			"name": "07. Filter on nested structures",
			"description": "You can use any related properties in a filter clause by using the same segments used in the path to traverse properties.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "37931639-2a9e-2103-2d5e-68e3d0ac0da2",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$expand=Parent",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nvalues.forEach(function(value) {\n    tests[\"All items contain Parent\"] = JSON.stringify(value).indexOf(\"Parent\") > -1;\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465909302121,
			"name": "19. Expand parent items",
			"description": "You can use the *$expand* system query option to include parent information for hierarchical resources. In Sitefinity every child item has a navigational property called Parent. Keep in mind that navigational properties like Parent and Comments are capitalized.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "3c523d93-e5b3-fca4-a1a4-179a3964457b",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body contains odata context\"] = responseBody.has(\"@odata.context\");\n\nvar jsonData = JSON.parse(responseBody);\nvar items = jsonData.value;\n\nitems.forEach(function(item) {\n    tests[\"All items contain \\\"Id\\\" parameter\"] = JSON.stringify(item).indexOf(\"\\\"Id\\\":\") > -1;\n    tests[\"All items contain \\\"Title\\\" parameter\"] = JSON.stringify(item).indexOf(\"\\\"Title\\\":\") > -1;\n    tests[\"All items contain \\\"UrlName\\\" parameter\"] = JSON.stringify(item).indexOf(\"\\\"UrlName\\\":\") > -1;\n    tests[\"All items contain \\\"JobDescription\\\" parameter\"] = JSON.stringify(item).indexOf(\"\\\"JobDescription\\\":\") > -1;\n    tests[\"All items contain \\\"ParentId\\\" parameter\"] = JSON.stringify(item).indexOf(\"\\\"ParentId\\\":\") > -1;\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465915840959,
			"name": "03. Read an entity set",
			"description": "One of the most common responses from a REST API is a collection of resources. In this case we asked for the Job Openings collection. For each response, the Sitefinity service writes a self-described response (another REST principle) by annotating the response with a context URL. This context URL tells the service that the contents of the response are a collection of things in the Job Openings entity set.\n\nIf the @odata.nextLink annotation is present, the server opted to split the result set across multiple pages. The client can also drive paging using $top and $skip, but server-side paging is a mitigation against DoS attacks. The value property contains the bulk of the response.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "3ec2d798-29d3-bee6-d541-334095698422",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/newsitems(15334fcc-71bb-41ef-b8d9-53a60601c92d)?sf_culture=es",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"The item with the expected Id is returned\"] = jsonData.Id === \"15334fcc-71bb-41ef-b8d9-53a60601c92d\";\ntests[\"The title is in the expected culture\"] = jsonData.Title === \"Cuántica lanza nueva portátil de negocios \\\"Gluón\\\"\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460992261882,
			"name": "12. Get item from a specific language culture",
			"description": "You can get an item in specific language culture by appending *?sf_culture={culture}* at the end of the query string.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "4010e44a-51d0-18b7-dba0-d6f282627062",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$format=application/json;odata.metadata=full",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [
				"{\n  \"Emails\": [\"miathompson@contoso.com\", \"miathompson@example.com\"]\n}"
			],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nvalues.forEach(function(value) {\n    tests[\"All titles contain odata.type\"] = value['@odata.type'];\n    tests[\"All titles contain odata.id\"] = value['@odata.id'];\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460994502517,
			"name": "22. Request full metadata",
			"description": "By default Sitefinity web services return an extremely compact JSON format. This happens by stripping out all of the metadata that should be calculable by \"smart\" OData clients. For generic hypermedia clients, you can request additional metadata by using the *Accept header* or *$format* system query option to request *application/json;odata.metadata=full*. In this case, we get a bunch of additional annotations in the payload indicating type information and relationships to related resources.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "4a54a1be-c177-bc85-d309-fec22ca3d5e1",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings({{item_id}})/Parent/$ref",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 204\"] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465907957230,
			"name": "25. Relate",
			"description": "You can relate an item using */{relation}/$ref* endpoint. You must provide a *\\\"@odata.id\\\"* parameter with the related item full url in the body of the request.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "{\r\n  \"@odata.id\":\"http://site16903121738207.srv03.sandbox.sitefinity.com/api/default/offices(689cd9da-0cb8-4cde-9bde-1bfd6ce4244b)\"\r\n}"
		},
		{
			"id": "5162282d-1acc-b77f-aa23-c598e975ffa7",
			"headers": "Content-Type: image/jpeg\nx-sf-service-request: true\nX-File-Name: image.jpg\nAuthorization: {{token}}\n",
			"url": "servicessandbox.cloudapp.net/api/default/images({{image_id}})?sf_culture=es",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PATCH",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"tests": "tests[\"Status code is 204\"] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465911801739,
			"name": "32. Add image to culture",
			"description": "To add different image for a specific language culture just append *?sf_culture={{your culture}}* to the URI of the image and make a PATCH request with the new image.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "53577d2e-d4a5-d036-47ee-7c4aa2c5e053",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings/$count",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response is a primitive number\"] = !isNaN(parseFloat(responseBody)) && isFinite(responseBody) === true;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460993662047,
			"name": "18. Counting the elements in a collection",
			"description": "If you want to know how many items meet a condition, you can use the *$count* path segment. Note that the Content-Type header indicates that the content is text/plain.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "59249a41-a3a6-b278-2b64-cbe62970ad25",
			"headers": "Content-Type: image/jpeg\nx-sf-service-request: true\nX-File-Name: image.jpg\nAuthorization: {{token}}\n",
			"url": "servicessandbox.cloudapp.net/api/default/images",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\npostman.setGlobalVariable(\"image_id\", jsonData.Id);\ntests[\"Response contains id\"] = responseBody.has(\"\\\"Id\\\"\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465911747451,
			"name": "31. Create image",
			"description": "Media is also suported. **Add an image to the body** and send a POST request.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "597a32fc-6994-bc88-45c7-03f91347e9a0",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body contains odata context\"] = responseBody.has(\"@odata.context\");\ntests[\"Body contains value array\"] = responseBody.has(\"value\");\n\nvar jsonData = JSON.parse(responseBody);\nvar items = jsonData.value;\n\nitems.forEach(function(item) {\n    tests[\"All items contain \\\"name\\\" parameter\"] = JSON.stringify(item).indexOf(\"\\\"name\\\":\") > -1;\n    tests[\"All items contain \\\"kind\\\" parameter\"] = JSON.stringify(item).indexOf(\"\\\"kind\\\":\") > -1;\n    tests[\"All items contain \\\"url\\\" parameter\"] = JSON.stringify(item).indexOf(\"\\\"url\\\":\") > -1;\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465913587804,
			"name": "01. Read the service root",
			"description": "Sitefinity Web Services REST APIs have a single entry point from which a generic hypermedia client can navigate to the resources in the service. In the response we see links to the $metadata document that describes the schema of the service and information about the content types exposed by the service like News, Blogs and Offices.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "61f543fe-5fc3-a447-fb9c-cb7efeb693b7",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$filter=Title eq 'Sales Representative'&$select=Title,Summary",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nvalues.forEach(function(value) {\n    tests[\"All items have title containing Sales Representative\"] = value.Title === 'Sales Representative';\n    tests[\"All items contain Summary\"] = value.Summary;\n    tests[\"All titles exactly two attributes\"] = Object.keys(value).length === 2;\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460994129510,
			"name": "20. Select the properties",
			"description": "You can use the *$select* system query option to only return specified properties.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "64ac9988-6c05-2c8d-5441-abe4174fdd28",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/hierarchy-taxa?$filter=TaxonomyId eq {{taxonomy_id}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Verify taxon title\"] = jsonData.value[0].Title === \"Sitefinity TDI\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465910063290,
			"name": "38. Filter taxons by taxonomy id",
			"description": "You can get all taxons from a taxonomy type.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "6ee86017-8a6b-e35a-8807-df6ccfa45251",
			"headers": "x-sf-service-request: true\nContent-Type: application/json\nAuthorization: {{token}}\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings({{item_id}})",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PATCH",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 204\"] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465907980299,
			"name": "27. Update an entity",
			"description": "To update a resource, send a PATCH request with the properties you wish to modify. Authorization header with a token is usually required for those requests.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "{\r\n  \"JobDescription\": \"Web services, Analyzing Information, General Programming Skills, Software Design, Software Debugging, Software Documentation, Software Testing, Problem Solving, Teamwork, Software Development Fundamentals, Software Development Process, Software Requirements\"\r\n}"
		},
		{
			"id": "76fb207a-8a23-3487-5ad2-24ce3cd2928d",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\npostman.setGlobalVariable(\"item_id\", jsonData.Id);\n\nvar jsonData = JSON.parse(responseBody);\n\ntests[\"Job opening with the same title is created\"] = jsonData.Title === 'Software Engineer';\ntests[\"Job opening with the same summary is created\"] = jsonData.Summary === 'Develops information systems by designing, developing, and installing software solutions.';\n\ntests[\"Job opening id is returned\"] = jsonData.Id",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465907856720,
			"name": "24. Create an entity",
			"description": "To create a resource, send a POST to a collection. The request format can be viewed on the service */sfhelp* web page. Authorization header with a token is usually required for those requests.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "{\r\n  \"ExpirationDate\": \"2016-04-15T07:57:36.671168Z\",\r\n  \"UrlName\": \"software-engineer\",\r\n  \"Title\": \"Software Engineer\",\r\n  \"Summary\": \"Develops information systems by designing, developing, and installing software solutions.\",\r\n  \"JobDescription\": \"Analyzing Information , General Programming Skills, Software Design, Software Debugging, Software Documentation, Software Testing, Problem Solving, Teamwork, Software Development Fundamentals, Software Development Process, Software Requirements\",\r\n  \"Parent\": { \"@odata.id\":\"http://site16903121738207.srv03.sandbox.sitefinity.com/api/default/offices(689cd9da-0cb8-4cde-9bde-1bfd6ce4244b)\" } \r\n}"
		},
		{
			"id": "86eb5929-6966-c02d-1710-70acbdfca057",
			"headers": "Content-Type: multipart/mixed; boundary=batch_36522ad7-fc75-4b56-8c71-56071383e77b\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/$batch",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"No 401 Unauthorized errors in body\"] = !(responseBody.has(\"401 Unauthorized\"));\ntests[\"No 404 Not Found in body\"] = !(responseBody.has(\"404 Not Found\"));\ntests[\"No 501 Internal server errors in body\"] = !(responseBody.has(\"500 Internal Server Error\"));",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465908408511,
			"name": "29. Batch",
			"description": "Services support the collection of multiple individual HTTP requests into one single batched HTTP request. Here two job openings are created and then related in a single request.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Type: multipart/mixed; boundary=changeset_54ac09ec-f437-4b08-9925-fd42ed7bd58f\r\n\r\n--changeset_54ac09ec-f437-4b08-9925-fd42ed7bd58f\r\nContent-Type: application/http\r\nContent-Transfer-Encoding: binary\r\nContent-ID: 1\r\n\r\nPOST /api/default/jobopenings HTTP/1.1\r\nHost: host\r\nContent-Type: application/json;odata.metadata=minimal\r\n\r\n{\r\n  \"ExpirationDate\": \"2016-04-15T07:57:36.671168Z\",\r\n  \"UrlName\": \"software-engineer\",\r\n  \"Title\": \"Software Engineer\",\r\n  \"Summary\": \"Develops information systems by designing, developing, and installing software solutions.\",\r\n  \"JobDescription\": \"Analyzing Information , General Programming Skills, Software Design, Software Debugging, Software Documentation, Software Testing, Problem Solving, Teamwork, Software Development Fundamentals, Software Development Process, Software Requirements\",\r\n  \"Parent\": { \"@odata.id\":\"http://site16903121738207.srv03.sandbox.sitefinity.com/api/default/offices(689cd9da-0cb8-4cde-9bde-1bfd6ce4244b)\" } \r\n}\r\n\r\n--changeset_54ac09ec-f437-4b08-9925-fd42ed7bd58f\r\nContent-Type: application/http\r\nContent-Transfer-Encoding: binary\r\nContent-ID: 2\r\n\r\nPOST /api/default/jobopenings HTTP/1.1\r\nHost: host\r\nContent-Type: application/json;odata.metadata=minimal\r\n\r\n{\r\n  \"ExpirationDate\": \"2016-04-15T07:57:36.671168Z\",\r\n  \"UrlName\": \"software-engineer\",\r\n  \"Title\": \"Senior Software Engineer\",\r\n  \"Summary\": \"Develops information systems by designing, developing, and installing software solutions.\",\r\n  \"JobDescription\": \"Analyzing Information , General Programming Skills, Software Design, Software Debugging, Software Documentation, Software Testing, Problem Solving, Teamwork, Software Development Fundamentals, Software Development Process, Software Requirements\",\r\n  \"Parent\": { \"@odata.id\":\"http://site16903121738207.srv03.sandbox.sitefinity.com/api/default/offices(689cd9da-0cb8-4cde-9bde-1bfd6ce4244b)\" } \r\n}\r\n\r\n--changeset_54ac09ec-f437-4b08-9925-fd42ed7bd58f\r\nContent-Type: application/http\r\nContent-Transfer-Encoding: binary\r\nContent-ID: 3\r\n\r\nPOST $1/relatedJob/$ref HTTP/1.1\r\nHost: host\r\nContent-Type: application/json;odata.metadata=minimal\r\n\r\n{\r\n  \"@odata.id\":\"$2\"\r\n}\r\n\r\n--changeset_54ac09ec-f437-4b08-9925-fd42ed7bd58f--\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b--"
		},
		{
			"id": "88a4ef24-6707-616b-1226-a5631f0da6cc",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/taxonomies({{taxonomy_id}})",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 204\"] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464185591702,
			"name": "41. Delete taxonomy",
			"description": "Delete taxonomy by providing the Id.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "89024640-260a-ea77-d46c-e9a91105792a",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/taxonomies",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 201 || responseCode.code === 202;\n\nvar jsonData = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"taxonomy_id\", jsonData.Id);\n\n\ntests[\"Verify name\"] = jsonData.Name === \"Cars\";\ntests[\"Verify title\"] = jsonData.Title === \"Cars\";\ntests[\"Verify description\"] = jsonData.Description === \"This is my test category\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464185570687,
			"name": "36. Create hierarchical taxonomy",
			"description": "POST request to */taxonomies* creates taxonomy. All the information is sent with the request body. If you try to create taxonomy that is already existent Sitefinity will return an apropriate message.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "{\n  \"Name\": \"Cars\",\n  \"Title\": \"Cars\",\n  \"Description\": \"This is my test category\",\n  \"TaxonName\": \"car\",\n  \"RootTaxonomyId\": null,\n  \"TaxaUrl\": \"car\",\n  \"Type\": \"Hierarchical\"\n}"
		},
		{
			"id": "8a659c69-3ff2-581d-1a31-2b57366cd27b",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/hierarchy-taxa",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 201 || responseCode.code === 202;\n\nvar jsonData = JSON.parse(responseBody);\npostman.setGlobalVariable(\"hierarchy-taxa-id\", jsonData.Id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464185574503,
			"name": "37. Create taxon",
			"description": "Creating taxon for any taxonomy is simple. created from previous request. Just send a POST request to the taxonomy type url. In the body include the title of the new taxon and the id of the taxonomy.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "    {\n      \"Title\": \"Sitefinity TDI\",\n      \"TaxonomyId\": \"{{taxonomy_id}}\"\n    }"
		},
		{
			"id": "8e1167e1-37c6-8d15-1412-4ffb1b82980b",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/$metadata",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body has Edmx tag\"] = responseBody.has(\"<edmx\");\ntests[\"Body has Schema tag\"] = responseBody.has(\"<Schema\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465906899159,
			"name": "02. Read the service metadata",
			"description": "*$metadata* is a Sitefinity endpoint that contains a machine-readable description of the service model including type schemas, available operations, etc.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "8ff662e9-518f-0c28-1b73-e882993c4517",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$filter=not(contains(Title,'Sales')) and PublicationDate gt 2012-08-10T19:29:03.157Z",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nvar titleFilterValid = true;\nvar dateFilterValid = true;\n\nvalues.forEach(function(value) {\n    if(value.Title.toLowerCase().indexOf('sales') !== -1){\n        titleFilterValid = false;\n    }\n    \n    if(value.PublicationDate < '2012-08-10T19:29:03.157Z'){\n        dateFilterValid = false;\n    }\n});\n\ntests[\"No titles contain sales\"] = titleFilterValid === true;\ntests[\"No publications are older than expected\"] = dateFilterValid === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460990721511,
			"name": "08. Filter using logic operators",
			"description": "You can use and, or and not to create more complex filter clauses.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "98fa34ec-8be0-b231-416a-875d4b1f5875",
			"headers": "Content-Type: application/json\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/login",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"token\", jsonData.value);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Token is returned\"] = responseBody.has(\"WRAP access_token=\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465907665153,
			"name": "23. Authenticate",
			"description": "You can authenticate using the special */login* endpoint. The service returns a token that can be added as authentication header for requests that require authentication.\n\n**All requests after this one depend on the authorization token in the response.**",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "{\n    \"username\": \"HumanCapitalEmployee\",\n    \"password\": \"hruser\"\n}"
		},
		{
			"id": "9f9e4c81-b73e-b8d4-dd98-c83f08f30264",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$filter=Tags/any(x:x eq b04f6523-ef9d-434a-b1a0-62899a38d7c8)",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nvalues.forEach(function(value) {\n    tests[\"All job openings have the tag\"] = value.Tags.includes('b04f6523-ef9d-434a-b1a0-62899a38d7c8') === true;\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461743932694,
			"name": "09. Filter using any operator",
			"description": "You can use any and lambda-style expressions to filter items by collection properties.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "a32fe298-a581-e6e9-982e-98777f43ca6a",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/newsitems?sf_provider=OpenAccessDataProvider",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460992472634,
			"name": "14. Filter by provider",
			"description": "There is support for filtering any type of content by the content provider. Just append *?sf_provider={your-provider}*, and only content from this provider will be returned. If you do not pass a provider the service always returns content from the default provider only.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "ac5dce15-c642-b06f-abc2-d47541441c66",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$expand=relatedJob",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nvalues.forEach(function(value) {\n    tests[\"All items contain relatedJob\"] = JSON.stringify(value).indexOf(\"relatedJob\") > -1;\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465909220760,
			"name": "30. Expand related entities",
			"description": "You can use the *$expand* system query option to expand related resources. Keep in mind it is an expensive operation and causes increased response times for large collections of items. Here we expand the relation we created in the previous request. ",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "bc29889a-abd0-5b1f-cb0b-7d876d768b96",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/taxonomies({{taxonomy_id}})",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PATCH",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 204\"] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464185587366,
			"name": "40. Update taxonomy field",
			"description": "Update only one field from a taxonomy with a PATCH request and only the fields you want to update included in the body of the request.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "{\n    \"Name\": \"Progress-Prototype-Cars\"\n}"
		},
		{
			"id": "c978831b-6bbb-653a-5c5b-c641106c9219",
			"headers": "x-sf-service-request: true\nAuthorization: {{token}}\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings({{item_id}})",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464185537135,
			"name": "28. Delete an entity",
			"description": "To remove a resource, send an HTTP DELETE to the resource URL. Authorization header with a token is usually required for those requests.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "cef8a2a3-b640-0d43-5f0b-938a6f82451f",
			"headers": "Content-Type: application/json\nx-sf-service-request: true\nAuthorization: {{token}}\n",
			"url": "servicessandbox.cloudapp.net/api/default/taxonomies",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string - Categories\"] = responseBody.has(\"Categories\");\ntests[\"Body matches string - Tags\"] = responseBody.has(\"Tags\");\n\nvar jsonData = JSON.parse(responseBody);\n\ntests[\"Verify Page template category present\"] = jsonData.value[0].Name === \"PageTemplates\";\ntests[\"Verify Categories present\"] = jsonData.value[1].Name === \"Categories\";\ntests[\"Verify Tags present\"] = jsonData.value[2].Name === \"Tags\";\ntests[\"Verify Departments present\"] = jsonData.value[3].Name === \"Departments\";\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464185559239,
			"name": "33. Get all taxonomies",
			"description": "Sitefinity supports flat and hierarchical taxonomies. You can get all taxonomies. GET request to */taxonomies* returns information about each taxonomy type.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "    {\n      \"Title\": \"test\"\n    }"
		},
		{
			"id": "d2b8094a-975d-879e-d167-7bdffc4b5231",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/newsitems?sf_culture=es",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\ntests[\"First title is in spanish\"] = values[0].Title === \"Cuántica lanza nueva portátil de negocios \\\"Gluón\\\"\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460992094276,
			"name": "11. Filter by language culture",
			"description": "You can query the items from a specific language culture when your Sitefinity is in multilingual mode. In this example only the Spanish translations of news items are returned.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "e30f35dc-5aa4-3ed1-739f-bf420600b86e",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$filter=contains(Title,'sales')",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nvalues.forEach(function(value) {\n    tests[\"All titles contain sales\"] = value.Title.toLowerCase().indexOf('sales') > -1;\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460989783650,
			"name": "06. Filter a collection",
			"description": "The *$filter* system query option can be used to filter any collection of resources. Note that the response to a filtered collection is a collection of the same type, regardless of the number of matched resources.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "e4147300-e7d5-86f9-bce6-49f0e3acd202",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/taxonomies(e5cd6d69-1543-427b-ad62-688a99f5e7d4)",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Verify Id\"] = jsonData.Id === \"e5cd6d69-1543-427b-ad62-688a99f5e7d4\";\ntests[\"Verify Name\"] = jsonData.Name === \"Categories\";\ntests[\"Verify Title\"] = jsonData.Title === \"Categories\";\ntests[\"Verify TaxonName\"] = jsonData.TaxonName === \"Category\";\ntests[\"Verify TaxaUrl\"] = jsonData.TaxaUrl === \"hierarchy-taxa\";\ntests[\"Verify Type\"] = jsonData.Type === \"Hierarchical\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464185566238,
			"name": "35. Get single taxonomy",
			"description": "As with any other type you can get taxonomy by it's Id.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "e4782d83-0c08-9f64-5c90-22fd25baf53f",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/newsitems/sfproviders",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\ntests[\"OpenAccessDataProvider is returned as option\"] = values.includes(\"OpenAccessDataProvider\") === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460992393370,
			"name": "13. Read content type providers",
			"description": "You can get the providers for a certain content type by adding */sfproviders* at the end of the url.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "ee5b87ef-a958-0494-1efb-414e883c4d77",
			"headers": "Content-Type: application/json\nAuthorization: {{token}}\nx-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/taxonomies({{taxonomy_id}})",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 204\"] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464185582702,
			"name": "39. Update taxonomy",
			"description": "You can also update any taxonomy with a PUT request.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": "    {\n      \"Name\": \"Prototype Cars\",\n      \"Title\": \"Prototype Cars\",\n      \"Description\": \"\",\n      \"TaxonName\": \"auto\",\n      \"RootTaxonomyId\": null,\n      \"TaxaUrl\": \"hierarchy-taxa\",\n      \"Type\": \"Hierarchical\"\n    }"
		},
		{
			"id": "f06657a4-8c34-3480-1532-834c06fbd290",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings/sales",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [
				"{\n\"userName\": \"scottketchum\",\n\"tripId\": 0\n}"
			],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nvalues.forEach(function(value) {\n    tests[\"All items have title containing Sales Representative\"] = value.Title === 'Sales Representative';\n    tests[\"All items contain Summary\"] = value.Summary;\n    tests[\"All titles exactly two attributes\"] = Object.keys(value).length === 2;\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460994145917,
			"name": "21. Filter using predefined methods",
			"description": "Sitefinity's predefined methods may be leveraged to filter the collection using semantic urls to handle requests. Here the query string from the previous example is replaced with */sales* and it is mapped to the query string in Sitefinity's advanced settings.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"rawModeData": null,
			"descriptionFormat": "html"
		},
		{
			"id": "f3b81f91-fcc1-c59f-ea45-a7e61fd80280",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$orderby=Title,PublicationDate desc",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\nvar lastTitle = values[0].Title;\n\nvalues.forEach(function(value) {\n    tests[\"Items are sorted by title\"] = value.Title <= lastTitle;\n    lastTitle = value;\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460992830297,
			"name": "15. Sort a collection",
			"description": "You can use *$orderby* system query option to request resources in ascending or descending order using *asc* or *desc*. In case *asc* or *desc* is not specified, then the resources will be ordered in ascending order. It is possible to sort on multiple attributes, these have to be comma separated.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		},
		{
			"id": "f624d652-c344-4547-5ec1-5a5be77a31f9",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/jobopenings?$filter=Title eq 'Sales Representative'",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": "{\n\"userName\": \"scottketchum\",\n\"tripId\": 0\n}",
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\nvar values = jsonData.value;\n\nvalues.forEach(function(value) {\n    tests[\"All jobs returned have title Sales Representative\"] = value.Title === 'Sales Representative';\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460991879043,
			"name": "10. Filter using built-in functions",
			"description": "Built-in functions may be leveraged to filter the collection.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": [],
			"timestamp": null
		},
		{
			"id": "fd6dfeb7-0364-c912-6491-281bf528ecf4",
			"headers": "x-sf-service-request: true\n",
			"url": "servicessandbox.cloudapp.net/api/default/newsitems",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Service returns next link\"] = responseBody.has(\"\\\"@odata.nextLink\\\"\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461333100205,
			"name": "17. Server-side paging",
			"description": "There are two types of paging in Sitefinity web services, server and client side. Servers can enable server-side paging, returning nextLinks that clients can follow to subsequent pages. In Sitefinity you can change the default page size in advanced settings trough the default page size option of the content type. Here the page size is set to 5 and an *@odata.nextLink* is generated and returned.",
			"collectionId": "1a07c73c-5e2d-bb3b-b461-82d25bf8ebee",
			"responses": []
		}
	]
}